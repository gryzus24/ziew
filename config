##
# Example ziew configuration. After editing, run ziew from the terminal
# to see if there are any errors. Upon ignoring the advice above
# you might want to consult the /tmp/ziew.log file.
#

##
# Widget line format
# WIDGET  REFRESH-INTERVAL (in 1/10ths of a second)  arg ...  format FORMAT-STRING

##
# Color line format
#   Change color conditionally on the OPTION value
#     FG or BG  OPTION  [THRESHOLD:RGB ...]
#   Set default color to RGB
#     FG or BG  RGB

##
# Color lines must come after the Widget lines they apply to.

## NOTE
# To make widget timings accurate, make sure all intervals
# are nicely divisible by the shortest interval.
# In this case 200 and 300 are all multiples of 20 so it's fine.

# You might want to adjust the interface name.
NET 20 arg enp5s0 format "{arg} {inet}"
# 0 - interface down, 1 - interface up.
# Valid RGB value formats: a44, #a44, aa4444, #aa4444.
FG state 0:a44 1:4a4

# Most numeric options support additional specifiers after the ':' symbol.
# '<' and '>' align output to the left and to the right with automatic
# precision adjustment while preserving the width.
#
# Values are presented as given by the kernel, but you can force the program
# to present them as the difference between two widget refreshes by using
# the '@d' flag after option's name.
# There is also a quiet flag '@q' that suppresses output if the value equals 0.
NET 20 arg enp5s0 format "RxTx {rx_bytes:>}/{tx_bytes:>} {rx_pkts@dq:>2}/{tx_pkts@dq:<2}"
FG 686

# Get space available on / every 20 seconds.
#DISK 200 arg / format "{arg} {available:>}"

# You can visualize how busy each CPU core is with the 'blkbars' option,
# If you have a lot of cores and want to save some horizontal space you
# can also use the 'brlbars' option.
CPU 20 format "{blkbars} {all:>3} {sys:>3}"
# Default to #999 from 0 up to 47%, default color from 48% to 59%
# and gradient of yellow (at 60% cpu usage) to red (at 90% and above).
# Threshold values must be given in ascending order.
FG %all 0:999 48: 60:ff0 66:fc0 72:f90 78:f60 84:f30 90:f00

MEM 20 format "MEM {%used:>} {free:>} [{cached:>}]"
FG %used 60:ff0 66:fc0 72:f90 78:f60 84:f30 90:f00

MEM 20 format "{dirty@q:>.0}:{writeback@q:>.0}"
FG 999

# Get battery info from /sys/class/power_supply/BAT<n>.
# Retrieving battery info is quite expensive - do it every 30 seconds.
BAT 300 arg BAT0 format "BAT {%fulldesign:.2} {state}"
# 0 - Discharging, 1 - Charging, 2 - Full, 3 - Not-charging, 4 - Unknown
FG state       1:4a4 2:4a4
# 0 to 14%: red, 15% to 24%: faint yellow, 25% and up: default color.
BG %fulldesign 0:a00 15:220 25:

# See strftime(3) for details about the format.
TIME 20 arg "%A %d.%m ~ %H:%M:%S" format "{time}"
FG bb9

# vim: ft=config
